//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DiversityService.DB.Collection
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DiversityCollection : DbContext
    {
        public DiversityCollection()
            : base("name=DiversityCollection")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Analysis> Analysis { get; set; }
        public DbSet<AnalysisResult> AnalysisResult { get; set; }
        public DbSet<Event> CollectionEvent { get; set; }
        public DbSet<EventImage> CollectionEventImage { get; set; }
        public DbSet<EventProperty> CollectionEventProperty { get; set; }
        public DbSet<EventSeries> EventSeries { get; set; }
        public DbSet<EventSeriesImage> CollectionEventSeriesImage { get; set; }
        public DbSet<Specimen> CollectionSpecimen { get; set; }
        public DbSet<SpecimenImage> CollectionSpecimenImage { get; set; }
        public DbSet<Identification> Identification { get; set; }
        public DbSet<IdentificationUnit> IdentificationUnit { get; set; }
        public DbSet<IdentificationUnitAnalysis> IdentificationUnitAnalysis { get; set; }
        public DbSet<IdentificationUnitGeoAnalysis> IdentificationUnitGeoAnalysis { get; set; }
        public DbSet<CollectionAgent> CollectionAgent { get; set; }
        public DbSet<Property> Property { get; set; }
    
        public ObjectResult<UserTaxonList> DiversityMobile_UserTaxonLists(string loginName)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("LoginName", loginName) :
                new ObjectParameter("LoginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserTaxonList>("DiversityMobile_UserTaxonLists", loginNameParameter);
        }
    
        public ObjectResult<UserTerminology> DiversityMobile_UserTerminologies(string loginName)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("LoginName", loginName) :
                new ObjectParameter("LoginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserTerminology>("DiversityMobile_UserTerminologies", loginNameParameter);
        }
    
        [DbFunction("DiversityCollection", "DiversityMobile_ProjectList")]
        public IQueryable<Project> DiversityMobile_ProjectList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Project>("[DiversityCollection].[DiversityMobile_ProjectList]()");
        }
    }
}
